module RMC.Protobuf.RMC (protoInfo, fileDescriptorProto) where
import Prelude ((+))
import qualified Prelude as P'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = P'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".RMC\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [], baseName = MName \"RMC\"}, protoFilePath = [\"RMC\",\"Protobuf\",\"RMC.hs\"], protoSource = \"RMC.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".RMC.RMC\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\"], baseName = MName \"RMC\"}, descFilePath = [\"RMC\",\"Protobuf\",\"RMC\",\"RMC.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.time\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"time\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.status\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"status\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".RMC.RMC.Status\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\",MName \"RMC\"], baseName = MName \"Status\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.latitude\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"latitude\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 25}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.longitude\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"longitude\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 33}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.speed\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"speed\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 41}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.direction\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"direction\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 49}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.date\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"date\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.mDecl\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"mDecl\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 65}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.mDeclDir\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"mDeclDir\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".RMC.RMC.MDeclDir\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\",MName \"RMC\"], baseName = MName \"MDeclDir\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".RMC.RMC.modeInd\", haskellPrefix' = [MName \"RMC\",MName \"Protobuf\"], parentModule' = [MName \"RMC\",MName \"RMC\"], baseName' = FName \"modeInd\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".RMC.RMC.ModeInd\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\",MName \"RMC\"], baseName = MName \"ModeInd\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".RMC.RMC.Status\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\",MName \"RMC\"], baseName = MName \"Status\"}, enumFilePath = [\"RMC\",\"Protobuf\",\"RMC\",\"RMC\",\"Status.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"A\"),(EnumCode {getEnumCode = 1},\"V\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".RMC.RMC.MDeclDir\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\",MName \"RMC\"], baseName = MName \"MDeclDir\"}, enumFilePath = [\"RMC\",\"Protobuf\",\"RMC\",\"RMC\",\"MDeclDir.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"E\"),(EnumCode {getEnumCode = 1},\"W\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".RMC.RMC.ModeInd\", haskellPrefix = [MName \"RMC\",MName \"Protobuf\"], parentModule = [MName \"RMC\",MName \"RMC\"], baseName = MName \"ModeInd\"}, enumFilePath = [\"RMC\",\"Protobuf\",\"RMC\",\"RMC\",\"ModeInd.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"A\"),(EnumCode {getEnumCode = 1},\"D\"),(EnumCode {getEnumCode = 2},\"E\"),(EnumCode {getEnumCode = 3},\"N\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\199\STX\n\tRMC.proto\"\185\STX\n\ETXRMC\DC2\f\n\EOTtime\CAN\SOH \SOH(\SOH\DC2\US\n\ACKstatus\CAN\STX \SOH(\SO2\SI.RMC.RMC.Status\DC2\DLE\n\blatitude\CAN\ETX \SOH(\SOH\DC2\DC1\n\tlongitude\CAN\EOT \SOH(\SOH\DC2\r\n\ENQspeed\CAN\ENQ \SOH(\SOH\DC2\DC1\n\tdirection\CAN\ACK \SOH(\SOH\DC2\f\n\EOTdate\CAN\a \SOH(\ENQ\DC2\r\n\ENQmDecl\CAN\b \SOH(\SOH\DC2#\n\bmDeclDir\CAN\t \SOH(\SO2\DC1.RMC.RMC.MDeclDir\DC2!\n\amodeInd\CAN\n \SOH(\SO2\DLE.RMC.RMC.ModeInd\"\SYN\n\ACKStatus\DC2\ENQ\n\SOHA\DLE\NUL\DC2\ENQ\n\SOHV\DLE\SOH\"\CAN\n\bMDeclDir\DC2\ENQ\n\SOHE\DLE\NUL\DC2\ENQ\n\SOHW\DLE\SOH\"%\n\aModeInd\DC2\ENQ\n\SOHA\DLE\NUL\DC2\ENQ\n\SOHD\DLE\SOH\DC2\ENQ\n\SOHE\DLE\STX\DC2\ENQ\n\SOHN\DLE\ETX")